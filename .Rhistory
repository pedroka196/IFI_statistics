teste01.total <- rbind(teste01.total,tmp.total)
}
}
for(i in 1:NROW(itens)){
teste01.total$Numero = ifelse(teste01.total$ID == itens$ID[i],itens$Numero[i],teste01.total$Numero)
}
# Salva a base após atualizar
save(teste01.total,file = "base01")
save(teste01.total,file = "base001-bkp")
troca <- as.character(c("%20","%C3%A9"))
trocado <- as.character(c(" ", "é"))
subs <- as.data.frame(cbind(troca,trocado))
subs <- subs %>% mutate(troca=as.character(troca),trocado=as.character(trocado))
rm(troca, trocado)
# Aqui substitui os elementos do texto referentes à acentos e outros elementos
for(i in 1:NROW(subs)){
itens$`Nome arquivo` <- gsub(pattern = subs$troca[i],replacement = subs$trocado[i], x = itens$`Nome arquivo`)
}
#filtro dos arquivos principais
teste02.total <- teste01.total %>%
#mutate(Nome_Arquivo = gsub("%20"," ",Nome_Arquivo)) %>%
filter(Nome_Arquivo %in% itens$`Nome arquivo`) %>%
mutate(ID= factor(ID), Categoria = factor(Categoria), Nome = factor(Nome),Nome_Arquivo = factor(Nome_Arquivo),Numero = as.integer(Numero))
teste02.total <- teste02.total %>%
group_by(Data,Categoria,ID,Numero,Nome,Data_Original,Nome_Arquivo) %>%
summarise(visualizações=sum(visualizações))
teste02.total <- teste02.total %>%
group_by(Data) %>%
mutate(Hora = sub(pattern = "[0-9]{4}-[0-9]{2}-[0-9]{2} ",replacement = "", x = Data)) %>%
mutate(Hora = as.POSIXct(paste("2019-01-01 ", Hora))) %>%
ungroup(Data) %>%
mutate(Data = as.Date(Data))
# Seleciona o último valor de cada data
teste03.total <- teste02.total %>%
group_by(Data,Nome) %>%
filter(Hora==max(Hora)) #%>%
teste02.total$Data[which.max(teste02.total$Data)]
save(teste02.total, file="base02")
save(teste03.total, file="base03")
write_excel_csv(teste01.total, "relatorio01.xlsx")
shiny::runApp('Visualização')
for(i in 1:NROW(itens)){
teste01 <- count.views.now(itens$ID[i])
#teste01.total$Numero <- ifelse(teste01.total$ID==itens$ID[i],itens$Numero[i],teste01.total$Numero)
#
print(i)
if(#i == 1 &
exists(x = "teste01.total") != T){
teste01.total <- teste01$`Arquivos visitados`
teste01.total$ID <- itens$ID[i]
teste01.total$Nome <- itens$Nome[i]
teste01.total$Categoria <- itens$Categoria[i]
teste01.total$Numero <- ifelse(teste01.total$ID == itens$ID[i],itens$Numero[i],teste01.total$Numero)
teste01.total$Data <- as.POSIXct(as.character("2019-01-15 14:34:30"),format="%Y-%m-%d %H")
teste01.total$Data_Original <- itens$Data[i]
names(teste01.total) <- c("Nome_Arquivo","visualizações","ID","Nome","Categoria","Numero","Data", "Data_Original")
}
else
{
tmp.total <- teste01$`Arquivos visitados`
tmp.total$ID <- itens$ID[i]
tmp.total$Nome <- itens$Nome[i]
tmp.total$Categoria <- itens$Categoria[i]
tmp.total$Numero <- ifelse(tmp.total$ID == itens$ID[i], itens$Numero[i],tmp.total$Numero)
tmp.total$Data <- as.POSIXct(Sys.time())
tmp.total$Data_Original <- itens$Data[i]
names(tmp.total) <- c("Nome_Arquivo","visualizações","ID","Nome","Categoria","Numero","Data", "Data_Original")
teste01.total <- rbind(teste01.total,tmp.total)
}
}
for(i in 1:NROW(itens)){
teste01.total$Numero = ifelse(teste01.total$ID == itens$ID[i],itens$Numero[i],teste01.total$Numero)
}
# Salva a base após atualizar
save(teste01.total,file = "base01")
save(teste01.total,file = "base001-bkp")
troca <- as.character(c("%20","%C3%A9"))
trocado <- as.character(c(" ", "é"))
subs <- as.data.frame(cbind(troca,trocado))
subs <- subs %>% mutate(troca=as.character(troca),trocado=as.character(trocado))
rm(troca, trocado)
# Aqui substitui os elementos do texto referentes à acentos e outros elementos
for(i in 1:NROW(subs)){
itens$`Nome arquivo` <- gsub(pattern = subs$troca[i],replacement = subs$trocado[i], x = itens$`Nome arquivo`)
}
#filtro dos arquivos principais
teste02.total <- teste01.total %>%
#mutate(Nome_Arquivo = gsub("%20"," ",Nome_Arquivo)) %>%
filter(Nome_Arquivo %in% itens$`Nome arquivo`) %>%
mutate(ID= factor(ID), Categoria = factor(Categoria), Nome = factor(Nome),Nome_Arquivo = factor(Nome_Arquivo),Numero = as.integer(Numero))
teste02.total <- teste02.total %>%
group_by(Data,Categoria,ID,Numero,Nome,Data_Original,Nome_Arquivo) %>%
summarise(visualizações=sum(visualizações))
teste02.total <- teste02.total %>%
group_by(Data) %>%
mutate(Hora = sub(pattern = "[0-9]{4}-[0-9]{2}-[0-9]{2} ",replacement = "", x = Data)) %>%
mutate(Hora = as.POSIXct(paste("2019-01-01 ", Hora))) %>%
ungroup(Data) %>%
mutate(Data = as.Date(Data))
# Seleciona o último valor de cada data
teste03.total <- teste02.total %>%
group_by(Data,Nome) %>%
filter(Hora==max(Hora)) #%>%
teste02.total$Data[which.max(teste02.total$Data)]
save(teste02.total, file="base02")
save(teste03.total, file="base03")
write_excel_csv(teste01.total, "relatorio01.xlsx")
for(i in 1:NROW(itens)){
teste01 <- count.views.now(itens$ID[i])
#teste01.total$Numero <- ifelse(teste01.total$ID==itens$ID[i],itens$Numero[i],teste01.total$Numero)
#
print(i)
if(#i == 1 &
exists(x = "teste01.total") != T){
teste01.total <- teste01$`Arquivos visitados`
teste01.total$ID <- itens$ID[i]
teste01.total$Nome <- itens$Nome[i]
teste01.total$Categoria <- itens$Categoria[i]
teste01.total$Numero <- ifelse(teste01.total$ID == itens$ID[i],itens$Numero[i],teste01.total$Numero)
teste01.total$Data <- as.POSIXct(as.character("2019-01-15 14:34:30"),format="%Y-%m-%d %H")
teste01.total$Data_Original <- itens$Data[i]
names(teste01.total) <- c("Nome_Arquivo","visualizações","ID","Nome","Categoria","Numero","Data", "Data_Original")
}
else
{
tmp.total <- teste01$`Arquivos visitados`
tmp.total$ID <- itens$ID[i]
tmp.total$Nome <- itens$Nome[i]
tmp.total$Categoria <- itens$Categoria[i]
tmp.total$Numero <- ifelse(tmp.total$ID == itens$ID[i], itens$Numero[i],tmp.total$Numero)
tmp.total$Data <- as.POSIXct(Sys.time())
tmp.total$Data_Original <- itens$Data[i]
names(tmp.total) <- c("Nome_Arquivo","visualizações","ID","Nome","Categoria","Numero","Data", "Data_Original")
teste01.total <- rbind(teste01.total,tmp.total)
}
}
for(i in 1:NROW(itens)){
teste01.total$Numero = ifelse(teste01.total$ID == itens$ID[i],itens$Numero[i],teste01.total$Numero)
}
# Salva a base após atualizar
save(teste01.total,file = "base01")
save(teste01.total,file = "base001-bkp")
troca <- as.character(c("%20","%C3%A9"))
trocado <- as.character(c(" ", "é"))
subs <- as.data.frame(cbind(troca,trocado))
subs <- subs %>% mutate(troca=as.character(troca),trocado=as.character(trocado))
rm(troca, trocado)
# Aqui substitui os elementos do texto referentes à acentos e outros elementos
for(i in 1:NROW(subs)){
itens$`Nome arquivo` <- gsub(pattern = subs$troca[i],replacement = subs$trocado[i], x = itens$`Nome arquivo`)
}
#filtro dos arquivos principais
teste02.total <- teste01.total %>%
#mutate(Nome_Arquivo = gsub("%20"," ",Nome_Arquivo)) %>%
filter(Nome_Arquivo %in% itens$`Nome arquivo`) %>%
mutate(ID= factor(ID), Categoria = factor(Categoria), Nome = factor(Nome),Nome_Arquivo = factor(Nome_Arquivo),Numero = as.integer(Numero))
teste02.total <- teste02.total %>%
group_by(Data,Categoria,ID,Numero,Nome,Data_Original,Nome_Arquivo) %>%
summarise(visualizações=sum(visualizações))
teste02.total <- teste02.total %>%
group_by(Data) %>%
mutate(Hora = sub(pattern = "[0-9]{4}-[0-9]{2}-[0-9]{2} ",replacement = "", x = Data)) %>%
mutate(Hora = as.POSIXct(paste("2019-01-01 ", Hora))) %>%
ungroup(Data) %>%
mutate(Data = as.Date(Data))
# Seleciona o último valor de cada data
teste03.total <- teste02.total %>%
group_by(Data,Nome) %>%
filter(Hora==max(Hora)) #%>%
teste02.total$Data[which.max(teste02.total$Data)]
save(teste02.total, file="base02")
save(teste03.total, file="base03")
write_excel_csv(teste01.total, "relatorio01.xlsx")
for(i in 1:NROW(itens)){
teste01 <- count.views.now(itens$ID[i])
#teste01.total$Numero <- ifelse(teste01.total$ID==itens$ID[i],itens$Numero[i],teste01.total$Numero)
#
print(i)
if(#i == 1 &
exists(x = "teste01.total") != T){
teste01.total <- teste01$`Arquivos visitados`
teste01.total$ID <- itens$ID[i]
teste01.total$Nome <- itens$Nome[i]
teste01.total$Categoria <- itens$Categoria[i]
teste01.total$Numero <- ifelse(teste01.total$ID == itens$ID[i],itens$Numero[i],teste01.total$Numero)
teste01.total$Data <- as.POSIXct(as.character("2019-01-15 14:34:30"),format="%Y-%m-%d %H")
teste01.total$Data_Original <- itens$Data[i]
names(teste01.total) <- c("Nome_Arquivo","visualizações","ID","Nome","Categoria","Numero","Data", "Data_Original")
}
else
{
tmp.total <- teste01$`Arquivos visitados`
tmp.total$ID <- itens$ID[i]
tmp.total$Nome <- itens$Nome[i]
tmp.total$Categoria <- itens$Categoria[i]
tmp.total$Numero <- ifelse(tmp.total$ID == itens$ID[i], itens$Numero[i],tmp.total$Numero)
tmp.total$Data <- as.POSIXct(Sys.time())
tmp.total$Data_Original <- itens$Data[i]
names(tmp.total) <- c("Nome_Arquivo","visualizações","ID","Nome","Categoria","Numero","Data", "Data_Original")
teste01.total <- rbind(teste01.total,tmp.total)
}
}
for(i in 1:NROW(itens)){
teste01.total$Numero = ifelse(teste01.total$ID == itens$ID[i],itens$Numero[i],teste01.total$Numero)
}
# Salva a base após atualizar
save(teste01.total,file = "base01")
save(teste01.total,file = "base001-bkp")
troca <- as.character(c("%20","%C3%A9"))
trocado <- as.character(c(" ", "é"))
subs <- as.data.frame(cbind(troca,trocado))
subs <- subs %>% mutate(troca=as.character(troca),trocado=as.character(trocado))
rm(troca, trocado)
# Aqui substitui os elementos do texto referentes à acentos e outros elementos
for(i in 1:NROW(subs)){
itens$`Nome arquivo` <- gsub(pattern = subs$troca[i],replacement = subs$trocado[i], x = itens$`Nome arquivo`)
}
#filtro dos arquivos principais
teste02.total <- teste01.total %>%
#mutate(Nome_Arquivo = gsub("%20"," ",Nome_Arquivo)) %>%
filter(Nome_Arquivo %in% itens$`Nome arquivo`) %>%
mutate(ID= factor(ID), Categoria = factor(Categoria), Nome = factor(Nome),Nome_Arquivo = factor(Nome_Arquivo),Numero = as.integer(Numero))
teste02.total <- teste02.total %>%
group_by(Data,Categoria,ID,Numero,Nome,Data_Original,Nome_Arquivo) %>%
summarise(visualizações=sum(visualizações))
teste02.total <- teste02.total %>%
group_by(Data) %>%
mutate(Hora = sub(pattern = "[0-9]{4}-[0-9]{2}-[0-9]{2} ",replacement = "", x = Data)) %>%
mutate(Hora = as.POSIXct(paste("2019-01-01 ", Hora))) %>%
ungroup(Data) %>%
mutate(Data = as.Date(Data))
# Seleciona o último valor de cada data
teste03.total <- teste02.total %>%
group_by(Data,Nome) %>%
filter(Hora==max(Hora)) #%>%
teste02.total$Data[which.max(teste02.total$Data)]
save(teste02.total, file="base02")
save(teste03.total, file="base03")
write_excel_csv(teste01.total, "relatorio01.xlsx")
runApp('Visualização')
library(readxl)
library(tidyverse)
library(rvest)
library(data.table)
library(lubridate)
for(i in 1:NROW(itens)){
teste01 <- count.views.now(itens$ID[i])
#teste01.total$Numero <- ifelse(teste01.total$ID==itens$ID[i],itens$Numero[i],teste01.total$Numero)
#
print(i)
if(#i == 1 &
exists(x = "teste01.total") != T){
teste01.total <- teste01$`Arquivos visitados`
teste01.total$ID <- itens$ID[i]
teste01.total$Nome <- itens$Nome[i]
teste01.total$Categoria <- itens$Categoria[i]
teste01.total$Numero <- ifelse(teste01.total$ID == itens$ID[i],itens$Numero[i],teste01.total$Numero)
teste01.total$Data <- as.POSIXct(as.character("2019-01-15 14:34:30"),format="%Y-%m-%d %H")
teste01.total$Data_Original <- itens$Data[i]
names(teste01.total) <- c("Nome_Arquivo","visualizações","ID","Nome","Categoria","Numero","Data", "Data_Original")
}
else
{
tmp.total <- teste01$`Arquivos visitados`
tmp.total$ID <- itens$ID[i]
tmp.total$Nome <- itens$Nome[i]
tmp.total$Categoria <- itens$Categoria[i]
tmp.total$Numero <- ifelse(tmp.total$ID == itens$ID[i], itens$Numero[i],tmp.total$Numero)
tmp.total$Data <- as.POSIXct(Sys.time())
tmp.total$Data_Original <- itens$Data[i]
names(tmp.total) <- c("Nome_Arquivo","visualizações","ID","Nome","Categoria","Numero","Data", "Data_Original")
teste01.total <- rbind(teste01.total,tmp.total)
}
}
for(i in 1:NROW(itens)){
teste01.total$Numero = ifelse(teste01.total$ID == itens$ID[i],itens$Numero[i],teste01.total$Numero)
}
# Salva a base após atualizar
save(teste01.total,file = "base01")
save(teste01.total,file = "base001-bkp")
troca <- as.character(c("%20","%C3%A9"))
trocado <- as.character(c(" ", "é"))
subs <- as.data.frame(cbind(troca,trocado))
subs <- subs %>% mutate(troca=as.character(troca),trocado=as.character(trocado))
rm(troca, trocado)
# Aqui substitui os elementos do texto referentes à acentos e outros elementos
for(i in 1:NROW(subs)){
itens$`Nome arquivo` <- gsub(pattern = subs$troca[i],replacement = subs$trocado[i], x = itens$`Nome arquivo`)
}
#filtro dos arquivos principais
teste02.total <- teste01.total %>%
#mutate(Nome_Arquivo = gsub("%20"," ",Nome_Arquivo)) %>%
filter(Nome_Arquivo %in% itens$`Nome arquivo`) %>%
mutate(ID= factor(ID), Categoria = factor(Categoria), Nome = factor(Nome),Nome_Arquivo = factor(Nome_Arquivo),Numero = as.integer(Numero))
teste02.total <- teste02.total %>%
group_by(Data,Categoria,ID,Numero,Nome,Data_Original,Nome_Arquivo) %>%
summarise(visualizações=sum(visualizações))
teste02.total <- teste02.total %>%
group_by(Data) %>%
mutate(Hora = sub(pattern = "[0-9]{4}-[0-9]{2}-[0-9]{2} ",replacement = "", x = Data)) %>%
mutate(Hora = as.POSIXct(paste("2019-01-01 ", Hora))) %>%
ungroup(Data) %>%
mutate(Data = as.Date(Data))
# Seleciona o último valor de cada data
teste03.total <- teste02.total %>%
group_by(Data,Nome) %>%
filter(Hora==max(Hora)) #%>%
teste02.total$Data[which.max(teste02.total$Data)]
save(teste02.total, file="base02")
save(teste03.total, file="base03")
write_excel_csv(teste01.total, "relatorio01.xlsx")
shiny::runApp('Visualização')
for(i in 1:NROW(itens)){
teste01 <- count.views.now(itens$ID[i])
#teste01.total$Numero <- ifelse(teste01.total$ID==itens$ID[i],itens$Numero[i],teste01.total$Numero)
#
print(i)
if(#i == 1 &
exists(x = "teste01.total") != T){
teste01.total <- teste01$`Arquivos visitados`
teste01.total$ID <- itens$ID[i]
teste01.total$Nome <- itens$Nome[i]
teste01.total$Categoria <- itens$Categoria[i]
teste01.total$Numero <- ifelse(teste01.total$ID == itens$ID[i],itens$Numero[i],teste01.total$Numero)
teste01.total$Data <- as.POSIXct(as.character("2019-01-15 14:34:30"),format="%Y-%m-%d %H")
teste01.total$Data_Original <- itens$Data[i]
names(teste01.total) <- c("Nome_Arquivo","visualizações","ID","Nome","Categoria","Numero","Data", "Data_Original")
}
else
{
tmp.total <- teste01$`Arquivos visitados`
tmp.total$ID <- itens$ID[i]
tmp.total$Nome <- itens$Nome[i]
tmp.total$Categoria <- itens$Categoria[i]
tmp.total$Numero <- ifelse(tmp.total$ID == itens$ID[i], itens$Numero[i],tmp.total$Numero)
tmp.total$Data <- as.POSIXct(Sys.time())
tmp.total$Data_Original <- itens$Data[i]
names(tmp.total) <- c("Nome_Arquivo","visualizações","ID","Nome","Categoria","Numero","Data", "Data_Original")
teste01.total <- rbind(teste01.total,tmp.total)
}
}
for(i in 1:NROW(itens)){
teste01.total$Numero = ifelse(teste01.total$ID == itens$ID[i],itens$Numero[i],teste01.total$Numero)
}
# Salva a base após atualizar
save(teste01.total,file = "base01")
save(teste01.total,file = "base001-bkp")
troca <- as.character(c("%20","%C3%A9"))
trocado <- as.character(c(" ", "é"))
subs <- as.data.frame(cbind(troca,trocado))
subs <- subs %>% mutate(troca=as.character(troca),trocado=as.character(trocado))
rm(troca, trocado)
# Aqui substitui os elementos do texto referentes à acentos e outros elementos
for(i in 1:NROW(subs)){
itens$`Nome arquivo` <- gsub(pattern = subs$troca[i],replacement = subs$trocado[i], x = itens$`Nome arquivo`)
}
#filtro dos arquivos principais
teste02.total <- teste01.total %>%
#mutate(Nome_Arquivo = gsub("%20"," ",Nome_Arquivo)) %>%
filter(Nome_Arquivo %in% itens$`Nome arquivo`) %>%
mutate(ID= factor(ID), Categoria = factor(Categoria), Nome = factor(Nome),Nome_Arquivo = factor(Nome_Arquivo),Numero = as.integer(Numero))
teste02.total <- teste02.total %>%
group_by(Data,Categoria,ID,Numero,Nome,Data_Original,Nome_Arquivo) %>%
summarise(visualizações=sum(visualizações))
teste02.total <- teste02.total %>%
group_by(Data) %>%
mutate(Hora = sub(pattern = "[0-9]{4}-[0-9]{2}-[0-9]{2} ",replacement = "", x = Data)) %>%
mutate(Hora = as.POSIXct(paste("2019-01-01 ", Hora))) %>%
ungroup(Data) %>%
mutate(Data = as.Date(Data))
# Seleciona o último valor de cada data
teste03.total <- teste02.total %>%
group_by(Data,Nome) %>%
filter(Hora==max(Hora)) #%>%
teste02.total$Data[which.max(teste02.total$Data)]
save(teste02.total, file="base02")
save(teste03.total, file="base03")
write_excel_csv(teste01.total, "relatorio01.xlsx")
for(i in 1:NROW(itens)){
teste01 <- count.views.now(itens$ID[i])
#teste01.total$Numero <- ifelse(teste01.total$ID==itens$ID[i],itens$Numero[i],teste01.total$Numero)
#
print(i)
if(#i == 1 &
exists(x = "teste01.total") != T){
teste01.total <- teste01$`Arquivos visitados`
teste01.total$ID <- itens$ID[i]
teste01.total$Nome <- itens$Nome[i]
teste01.total$Categoria <- itens$Categoria[i]
teste01.total$Numero <- ifelse(teste01.total$ID == itens$ID[i],itens$Numero[i],teste01.total$Numero)
teste01.total$Data <- as.POSIXct(as.character("2019-01-15 14:34:30"),format="%Y-%m-%d %H")
teste01.total$Data_Original <- itens$Data[i]
names(teste01.total) <- c("Nome_Arquivo","visualizações","ID","Nome","Categoria","Numero","Data", "Data_Original")
}
else
{
tmp.total <- teste01$`Arquivos visitados`
tmp.total$ID <- itens$ID[i]
tmp.total$Nome <- itens$Nome[i]
tmp.total$Categoria <- itens$Categoria[i]
tmp.total$Numero <- ifelse(tmp.total$ID == itens$ID[i], itens$Numero[i],tmp.total$Numero)
tmp.total$Data <- as.POSIXct(Sys.time())
tmp.total$Data_Original <- itens$Data[i]
names(tmp.total) <- c("Nome_Arquivo","visualizações","ID","Nome","Categoria","Numero","Data", "Data_Original")
teste01.total <- rbind(teste01.total,tmp.total)
}
}
for(i in 1:NROW(itens)){
teste01.total$Numero = ifelse(teste01.total$ID == itens$ID[i],itens$Numero[i],teste01.total$Numero)
}
# Salva a base após atualizar
save(teste01.total,file = "base01")
save(teste01.total,file = "base001-bkp")
troca <- as.character(c("%20","%C3%A9"))
trocado <- as.character(c(" ", "é"))
subs <- as.data.frame(cbind(troca,trocado))
subs <- subs %>% mutate(troca=as.character(troca),trocado=as.character(trocado))
rm(troca, trocado)
# Aqui substitui os elementos do texto referentes à acentos e outros elementos
for(i in 1:NROW(subs)){
itens$`Nome arquivo` <- gsub(pattern = subs$troca[i],replacement = subs$trocado[i], x = itens$`Nome arquivo`)
}
#filtro dos arquivos principais
teste02.total <- teste01.total %>%
#mutate(Nome_Arquivo = gsub("%20"," ",Nome_Arquivo)) %>%
filter(Nome_Arquivo %in% itens$`Nome arquivo`) %>%
mutate(ID= factor(ID), Categoria = factor(Categoria), Nome = factor(Nome),Nome_Arquivo = factor(Nome_Arquivo),Numero = as.integer(Numero))
teste02.total <- teste02.total %>%
group_by(Data,Categoria,ID,Numero,Nome,Data_Original,Nome_Arquivo) %>%
summarise(visualizações=sum(visualizações))
teste02.total <- teste02.total %>%
group_by(Data) %>%
mutate(Hora = sub(pattern = "[0-9]{4}-[0-9]{2}-[0-9]{2} ",replacement = "", x = Data)) %>%
mutate(Hora = as.POSIXct(paste("2019-01-01 ", Hora))) %>%
ungroup(Data) %>%
mutate(Data = as.Date(Data))
# Seleciona o último valor de cada data
teste03.total <- teste02.total %>%
group_by(Data,Nome) %>%
filter(Hora==max(Hora)) #%>%
teste02.total$Data[which.max(teste02.total$Data)]
save(teste02.total, file="base02")
save(teste03.total, file="base03")
write_excel_csv(teste01.total, "relatorio01.xlsx")
runApp('Visualização')
for(i in 1:NROW(itens)){
teste01 <- count.views.now(itens$ID[i])
#teste01.total$Numero <- ifelse(teste01.total$ID==itens$ID[i],itens$Numero[i],teste01.total$Numero)
#
print(i)
if(#i == 1 &
exists(x = "teste01.total") != T){
teste01.total <- teste01$`Arquivos visitados`
teste01.total$ID <- itens$ID[i]
teste01.total$Nome <- itens$Nome[i]
teste01.total$Categoria <- itens$Categoria[i]
teste01.total$Numero <- ifelse(teste01.total$ID == itens$ID[i],itens$Numero[i],teste01.total$Numero)
teste01.total$Data <- as.POSIXct(as.character("2019-01-15 14:34:30"),format="%Y-%m-%d %H")
teste01.total$Data_Original <- itens$Data[i]
names(teste01.total) <- c("Nome_Arquivo","visualizações","ID","Nome","Categoria","Numero","Data", "Data_Original")
}
else
{
tmp.total <- teste01$`Arquivos visitados`
tmp.total$ID <- itens$ID[i]
tmp.total$Nome <- itens$Nome[i]
tmp.total$Categoria <- itens$Categoria[i]
tmp.total$Numero <- ifelse(tmp.total$ID == itens$ID[i], itens$Numero[i],tmp.total$Numero)
tmp.total$Data <- as.POSIXct(Sys.time())
tmp.total$Data_Original <- itens$Data[i]
names(tmp.total) <- c("Nome_Arquivo","visualizações","ID","Nome","Categoria","Numero","Data", "Data_Original")
teste01.total <- rbind(teste01.total,tmp.total)
}
}
for(i in 1:NROW(itens)){
teste01.total$Numero = ifelse(teste01.total$ID == itens$ID[i],itens$Numero[i],teste01.total$Numero)
}
# Salva a base após atualizar
save(teste01.total,file = "base01")
save(teste01.total,file = "base001-bkp")
troca <- as.character(c("%20","%C3%A9"))
trocado <- as.character(c(" ", "é"))
subs <- as.data.frame(cbind(troca,trocado))
subs <- subs %>% mutate(troca=as.character(troca),trocado=as.character(trocado))
rm(troca, trocado)
# Aqui substitui os elementos do texto referentes à acentos e outros elementos
for(i in 1:NROW(subs)){
itens$`Nome arquivo` <- gsub(pattern = subs$troca[i],replacement = subs$trocado[i], x = itens$`Nome arquivo`)
}
#filtro dos arquivos principais
teste02.total <- teste01.total %>%
#mutate(Nome_Arquivo = gsub("%20"," ",Nome_Arquivo)) %>%
filter(Nome_Arquivo %in% itens$`Nome arquivo`) %>%
mutate(ID= factor(ID), Categoria = factor(Categoria), Nome = factor(Nome),Nome_Arquivo = factor(Nome_Arquivo),Numero = as.integer(Numero))
teste02.total <- teste02.total %>%
group_by(Data,Categoria,ID,Numero,Nome,Data_Original,Nome_Arquivo) %>%
summarise(visualizações=sum(visualizações))
teste02.total <- teste02.total %>%
group_by(Data) %>%
mutate(Hora = sub(pattern = "[0-9]{4}-[0-9]{2}-[0-9]{2} ",replacement = "", x = Data)) %>%
mutate(Hora = as.POSIXct(paste("2019-01-01 ", Hora))) %>%
ungroup(Data) %>%
mutate(Data = as.Date(Data))
# Seleciona o último valor de cada data
teste03.total <- teste02.total %>%
group_by(Data,Nome) %>%
filter(Hora==max(Hora)) #%>%
teste02.total$Data[which.max(teste02.total$Data)]
save(teste02.total, file="base02")
save(teste03.total, file="base03")
write_excel_csv(teste01.total, "relatorio01.xlsx")
runApp('Visualização')
